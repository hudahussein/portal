!function () { function t(t, e) { var n = e || a; return "object" == typeof (r[t] = t) ? t instanceof Array ? o.getFromArray(t, n) : o.getFromObjectKeys(t, n) : o.getFromKey(t, n) } function i() { var t = o.getFromObjectValues({ name: "name", englishName: "englishName", nativeName: "nativeName", amDesignator: "AM", pmDesignator: "PM", firstDayOfWeek: "firstDayOfWeek", twoDigitYearMax: "twoDigitYearMax", dateElementOrder: "mdy" }, Date.i18n.currentLanguage()); return function (t, e) { for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]) }(t, n.buildFromMethodHash({ dayNames: "days", abbreviatedDayNames: "dayAbbr", shortestDayNames: "dayShortNames", firstLetterDayNames: "dayFirstLetters", monthNames: "months", abbreviatedMonthNames: "monthAbbr", formatPatterns: "formatPatterns", regexPatterns: "regex", abbreviatedTimeZoneDST: "timeZoneDST", abbreviatedTimeZoneStandard: "timeZoneStandard" })), n.timeZones(t), t } var s = Date, a = Date.CultureStrings ? Date.CultureStrings.lang : null, r = {}, o = { getFromKey: function (t, e) { var n = Date.CultureStrings && Date.CultureStrings[e] && Date.CultureStrings[e][t] ? Date.CultureStrings[e][t] : o.buildFromDefault(t); return "/" === t.charAt(0) && (n = o.buildFromRegex(t, e)), n }, getFromObjectValues: function (t, e) { var n, r = {}; for (n in t) t.hasOwnProperty(n) && (r[n] = o.getFromKey(t[n], e)); return r }, getFromObjectKeys: function (t, e) { var n, r = {}; for (n in t) t.hasOwnProperty(n) && (r[o.getFromKey(n, e)] = t[n]); return r }, getFromArray: function (t, e) { for (var n = [], r = 0; r < t.length; r++) r in t && (n[r] = o.getFromKey(t[r], e)); return n }, buildFromDefault: function (t) { var e, n, r, i; switch (t) { case "name": e = "en-US"; break; case "englishName": case "nativeName": e = "English (United States)"; break; case "twoDigitYearMax": e = 2049; break; case "firstDayOfWeek": e = 0; break; default: 1 < (n = (r = (e = t).split("_")).length) && "/" !== t.charAt(0) && ("initial" !== (i = r[n - 1].toLowerCase()) && "abbr" !== i || (e = r[0])) } return e }, buildFromRegex: function (t, e) { var n = Date.CultureStrings && Date.CultureStrings[e] && Date.CultureStrings[e][t] ? new RegExp(Date.CultureStrings[e][t], "i") : new RegExp(t.replace(new RegExp("/", "g"), ""), "i"); return n } }, n = { buildFromMethodHash: function (t) { var e; for (e in t) t.hasOwnProperty(e) && (t[e] = n[t[e]]()); return t }, timeZoneDST: function () { return t({ CHADT: "+1345", NZDT: "+1300", AEDT: "+1100", ACDT: "+1030", AZST: "+0500", IRDT: "+0430", EEST: "+0300", CEST: "+0200", BST: "+0100", PMDT: "-0200", ADT: "-0300", NDT: "-0230", EDT: "-0400", CDT: "-0500", MDT: "-0600", PDT: "-0700", AKDT: "-0800", HADT: "-0900" }) }, timeZoneStandard: function () { return t({ LINT: "+1400", TOT: "+1300", CHAST: "+1245", NZST: "+1200", NFT: "+1130", SBT: "+1100", AEST: "+1000", ACST: "+0930", JST: "+0900", CWST: "+0845", CT: "+0800", ICT: "+0700", MMT: "+0630", BST: "+0600", NPT: "+0545", IST: "+0530", PKT: "+0500", AFT: "+0430", MSK: "+0400", IRST: "+0330", FET: "+0300", EET: "+0200", CET: "+0100", GMT: "+0000", UTC: "+0000", CVT: "-0100", GST: "-0200", BRT: "-0300", NST: "-0330", AST: "-0400", EST: "-0500", CST: "-0600", MST: "-0700", PST: "-0800", AKST: "-0900", MIT: "-0930", HST: "-1000", SST: "-1100", BIT: "-1200" }) }, timeZones: function (t) { var e; for (e in t.timezones = [], t.abbreviatedTimeZoneStandard) t.abbreviatedTimeZoneStandard.hasOwnProperty(e) && t.timezones.push({ name: e, offset: t.abbreviatedTimeZoneStandard[e] }); for (e in t.abbreviatedTimeZoneDST) t.abbreviatedTimeZoneDST.hasOwnProperty(e) && t.timezones.push({ name: e, offset: t.abbreviatedTimeZoneDST[e], dst: !0 }); return t.timezones }, days: function () { return t(["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]) }, dayAbbr: function () { return t(["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]) }, dayShortNames: function () { return t(["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]) }, dayFirstLetters: function () { return t(["S_Sun_Initial", "M_Mon_Initial", "T_Tues_Initial", "W_Wed_Initial", "T_Thu_Initial", "F_Fri_Initial", "S_Sat_Initial"]) }, months: function () { return t(["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]) }, monthAbbr: function () { return t(["Jan_Abbr", "Feb_Abbr", "Mar_Abbr", "Apr_Abbr", "May_Abbr", "Jun_Abbr", "Jul_Abbr", "Aug_Abbr", "Sep_Abbr", "Oct_Abbr", "Nov_Abbr", "Dec_Abbr"]) }, formatPatterns: function () { return o.getFromObjectValues({ shortDate: "M/d/yyyy", longDate: "dddd, MMMM dd, yyyy", shortTime: "h:mm tt", longTime: "h:mm:ss tt", fullDateTime: "dddd, MMMM dd, yyyy h:mm:ss tt", sortableDateTime: "yyyy-MM-ddTHH:mm:ss", universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ", rfc1123: "ddd, dd MMM yyyy HH:mm:ss", monthDay: "MMMM dd", yearMonth: "MMMM, yyyy" }, Date.i18n.currentLanguage()) }, regex: function () { return o.getFromObjectValues({ inTheMorning: "/( in the )(morn(ing)?)\\b/", thisMorning: "/(this )(morn(ing)?)\\b/", amThisMorning: "/(\b\\d(am)? )(this )(morn(ing)?)/", inTheEvening: "/( in the )(even(ing)?)\\b/", thisEvening: "/(this )(even(ing)?)\\b/", pmThisEvening: "/(\b\\d(pm)? )(this )(even(ing)?)/", jan: "/jan(uary)?/", feb: "/feb(ruary)?/", mar: "/mar(ch)?/", apr: "/apr(il)?/", may: "/may/", jun: "/jun(e)?/", jul: "/jul(y)?/", aug: "/aug(ust)?/", sep: "/sep(t(ember)?)?/", oct: "/oct(ober)?/", nov: "/nov(ember)?/", dec: "/dec(ember)?/", sun: "/^su(n(day)?)?/", mon: "/^mo(n(day)?)?/", tue: "/^tu(e(s(day)?)?)?/", wed: "/^we(d(nesday)?)?/", thu: "/^th(u(r(s(day)?)?)?)?/", fri: "/fr(i(day)?)?/", sat: "/^sa(t(urday)?)?/", future: "/^next/", past: "/^last|past|prev(ious)?/", add: "/^(\\+|aft(er)?|from|hence)/", subtract: "/^(\\-|bef(ore)?|ago)/", yesterday: "/^yes(terday)?/", today: "/^t(od(ay)?)?/", tomorrow: "/^tom(orrow)?/", now: "/^n(ow)?/", millisecond: "/^ms|milli(second)?s?/", second: "/^sec(ond)?s?/", minute: "/^mn|min(ute)?s?/", hour: "/^h(our)?s?/", week: "/^w(eek)?s?/", month: "/^m(onth)?s?/", day: "/^d(ay)?s?/", year: "/^y(ear)?s?/", shortMeridian: "/^(a|p)/", longMeridian: "/^(a\\.?m?\\.?|p\\.?m?\\.?)/", timezone: "/^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\\s*(\\+|\\-)\\s*\\d\\d\\d\\d?)|gmt|utc)/", ordinalSuffix: "/^\\s*(st|nd|rd|th)/", timeContext: "/^\\s*(\\:|a(?!u|p)|p)/" }, Date.i18n.currentLanguage()) } }; s.i18n = { __: t, currentLanguage: function () { return a || "en-US" }, setLanguage: function (e, t, n) { var r = !1; if (t || "en-US" === e || Date.CultureStrings && Date.CultureStrings[e]) a = e, Date.CultureStrings = Date.CultureStrings || {}, Date.CultureStrings.lang = e, Date.CultureInfo = new i; else if (!Date.CultureStrings || !Date.CultureStrings[e]) if ("undefined" != typeof exports && this.exports !== exports) try { require("../i18n/" + e + ".js"), a = e, Date.CultureStrings.lang = e, Date.CultureInfo = new i } catch (t) { throw new Error("The DateJS IETF language tag '" + e + "' could not be loaded by Node. It likely does not exist.") } else { if (!Date.Config || !Date.Config.i18n) return Date.console.error("The DateJS IETF language tag '" + e + "' is not available and has not been loaded."), !1; r = !0, function (t) { var e = Date.Config.i18n + t + ".js", n = document.getElementsByTagName("head")[0] || document.documentElement, r = document.createElement("script"); r.src = e; var i = { done: function () { } }; return r.onload = r.onreadystatechange = function () { this.readyState && "loaded" !== this.readyState && "complete" !== this.readyState || (i.done(), n.removeChild(r)) }, setTimeout(function () { n.insertBefore(r, n.firstChild) }, 0), { done: function (t) { i.done = function () { t && setTimeout(t, 0) } } } }(e).done(function () { a = e, Date.CultureStrings = Date.CultureStrings || {}, Date.CultureStrings.lang = e, Date.CultureInfo = new i, s.Parsing.Normalizer.buildReplaceData(), s.Grammar && s.Grammar.buildGrammarFormats(), n && setTimeout(n, 0) }) } s.Parsing.Normalizer.buildReplaceData(), s.Grammar && s.Grammar.buildGrammarFormats(), !r && n && setTimeout(n, 0) }, getLoggedKeys: function () { return r }, updateCultureInfo: function () { Date.CultureInfo = new i } }, s.i18n.updateCultureInfo() }(), function () { function t(t, e) { return ("000" + t).slice(-1 * (e = e || 2)) } var r = Date, e = r.prototype; "undefined" != typeof window && void 0 !== window.console && void 0 !== window.console.log ? r.console = console : r.console = { log: function () { }, error: function () { } }, r.Config = r.Config || {}, r.initOverloads = function () { r.now ? r._now || (r._now = r.now) : r._now = function () { return (new Date).getTime() }, r.now = function (t) { return t ? r.present() : r._now() }, e.toISOString || (e.toISOString = function () { return this.getUTCFullYear() + "-" + t(this.getUTCMonth() + 1) + "-" + t(this.getUTCDate()) + "T" + t(this.getUTCHours()) + ":" + t(this.getUTCMinutes()) + ":" + t(this.getUTCSeconds()) + "." + String((this.getUTCMilliseconds() / 1e3).toFixed(3)).slice(2, 5) + "Z" }), void 0 === e._toString && (e._toString = e.toString) }, r.initOverloads(), r.today = function () { return (new Date).clearTime() }, r.present = function () { return new Date }, r.compare = function (t, e) { if (isNaN(t) || isNaN(e)) throw new Error(t + " - " + e); if (t instanceof Date && e instanceof Date) return t < e ? -1 : e < t ? 1 : 0; throw new TypeError(t + " - " + e) }, r.equals = function (t, e) { return 0 === t.compareTo(e) }, r.getDayName = function (t) { return Date.CultureInfo.dayNames[t] }, r.getDayNumberFromName = function (t) { for (var e = Date.CultureInfo.dayNames, n = Date.CultureInfo.abbreviatedDayNames, r = Date.CultureInfo.shortestDayNames, i = t.toLowerCase(), s = 0; s < e.length; s++) if (e[s].toLowerCase() === i || n[s].toLowerCase() === i || r[s].toLowerCase() === i) return s; return -1 }, r.getMonthNumberFromName = function (t) { for (var e = Date.CultureInfo.monthNames, n = Date.CultureInfo.abbreviatedMonthNames, r = t.toLowerCase(), i = 0; i < e.length; i++) if (e[i].toLowerCase() === r || n[i].toLowerCase() === r) return i; return -1 }, r.getMonthName = function (t) { return Date.CultureInfo.monthNames[t] }, r.isLeapYear = function (t) { return t % 4 == 0 && t % 100 != 0 || t % 400 == 0 }, r.getDaysInMonth = function (t, e) { return !e && r.validateMonth(t) && (e = t, t = Date.today().getFullYear()), [31, r.isLeapYear(t) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][e] }, e.getDaysInMonth = function () { return r.getDaysInMonth(this.getFullYear(), this.getMonth()) }, r.getTimezoneAbbreviation = function (t, e) { var n, r = e ? Date.CultureInfo.abbreviatedTimeZoneDST : Date.CultureInfo.abbreviatedTimeZoneStandard; for (n in r) if (r.hasOwnProperty(n) && r[n] === t) return n; return null }, r.getTimezoneOffset = function (t, e) { var n, r = [], i = Date.CultureInfo.timezones; for (t = t || (new Date).getTimezone(), n = 0; n < i.length; n++) i[n].name === t.toUpperCase() && r.push(n); if (!i[r[0]]) return null; if (1 === r.length || !e) return i[r[0]].offset; for (n = 0; n < r.length; n++) if (i[r[n]].dst) return i[r[n]].offset }, r.getQuarter = function (t) { t = t || new Date; return [1, 2, 3, 4][Math.floor(t.getMonth() / 3)] }, r.getDaysLeftInQuarter = function (t) { t = t || new Date; var e = new Date(t); return e.setMonth(e.getMonth() + 3 - e.getMonth() % 3, 0), Math.floor((e - t) / 864e5) }; function i(t, e, n, r) { if (void 0 === t) return !1; if ("number" != typeof t) throw new TypeError(t + " is not a Number."); return !(t < e || n < t) } r.validateMillisecond = function (t) { return i(t, 0, 999) }, r.validateSecond = function (t) { return i(t, 0, 59) }, r.validateMinute = function (t) { return i(t, 0, 59) }, r.validateHour = function (t) { return i(t, 0, 23) }, r.validateDay = function (t, e, n) { return null != e && null != n && i(t, 1, r.getDaysInMonth(e, n)) }, r.validateWeek = function (t) { return i(t, 0, 53) }, r.validateMonth = function (t) { return i(t, 0, 11) }, r.validateYear = function (t) { return i(t, -271822, 275760) }, r.validateTimezone = function (t) { return 1 === { ACDT: 1, ACST: 1, ACT: 1, ADT: 1, AEDT: 1, AEST: 1, AFT: 1, AKDT: 1, AKST: 1, AMST: 1, AMT: 1, ART: 1, AST: 1, AWDT: 1, AWST: 1, AZOST: 1, AZT: 1, BDT: 1, BIOT: 1, BIT: 1, BOT: 1, BRT: 1, BST: 1, BTT: 1, CAT: 1, CCT: 1, CDT: 1, CEDT: 1, CEST: 1, CET: 1, CHADT: 1, CHAST: 1, CHOT: 1, ChST: 1, CHUT: 1, CIST: 1, CIT: 1, CKT: 1, CLST: 1, CLT: 1, COST: 1, COT: 1, CST: 1, CT: 1, CVT: 1, CWST: 1, CXT: 1, DAVT: 1, DDUT: 1, DFT: 1, EASST: 1, EAST: 1, EAT: 1, ECT: 1, EDT: 1, EEDT: 1, EEST: 1, EET: 1, EGST: 1, EGT: 1, EIT: 1, EST: 1, FET: 1, FJT: 1, FKST: 1, FKT: 1, FNT: 1, GALT: 1, GAMT: 1, GET: 1, GFT: 1, GILT: 1, GIT: 1, GMT: 1, GST: 1, GYT: 1, HADT: 1, HAEC: 1, HAST: 1, HKT: 1, HMT: 1, HOVT: 1, HST: 1, ICT: 1, IDT: 1, IOT: 1, IRDT: 1, IRKT: 1, IRST: 1, IST: 1, JST: 1, KGT: 1, KOST: 1, KRAT: 1, KST: 1, LHST: 1, LINT: 1, MAGT: 1, MART: 1, MAWT: 1, MDT: 1, MET: 1, MEST: 1, MHT: 1, MIST: 1, MIT: 1, MMT: 1, MSK: 1, MST: 1, MUT: 1, MVT: 1, MYT: 1, NCT: 1, NDT: 1, NFT: 1, NPT: 1, NST: 1, NT: 1, NUT: 1, NZDT: 1, NZST: 1, OMST: 1, ORAT: 1, PDT: 1, PET: 1, PETT: 1, PGT: 1, PHOT: 1, PHT: 1, PKT: 1, PMDT: 1, PMST: 1, PONT: 1, PST: 1, PYST: 1, PYT: 1, RET: 1, ROTT: 1, SAKT: 1, SAMT: 1, SAST: 1, SBT: 1, SCT: 1, SGT: 1, SLST: 1, SRT: 1, SST: 1, SYOT: 1, TAHT: 1, THA: 1, TFT: 1, TJT: 1, TKT: 1, TLT: 1, TMT: 1, TOT: 1, TVT: 1, UCT: 1, ULAT: 1, UTC: 1, UYST: 1, UYT: 1, UZT: 1, VET: 1, VLAT: 1, VOLT: 1, VOST: 1, VUT: 1, WAKT: 1, WAST: 1, WAT: 1, WEDT: 1, WEST: 1, WET: 1, WST: 1, YAKT: 1, YEKT: 1, Z: 1 }[t] }, r.validateTimezoneOffset = function (t) { return -841 < t && t < 721 } }(), function () { function i(t, e) { return ("000" + t).slice(-1 * (e = e || 2)) } var o = Date, t = o.prototype; t.clearTime = function () { return this.setHours(0), this.setMinutes(0), this.setSeconds(0), this.setMilliseconds(0), this }, t.setTimeToNow = function () { var t = new Date; return this.setHours(t.getHours()), this.setMinutes(t.getMinutes()), this.setSeconds(t.getSeconds()), this.setMilliseconds(t.getMilliseconds()), this }, t.clone = function () { return new Date(this.getTime()) }, t.compareTo = function (t) { return Date.compare(this, t) }, t.equals = function (t) { return Date.equals(this, void 0 !== t ? t : new Date) }, t.between = function (t, e) { return this.getTime() >= t.getTime() && this.getTime() <= e.getTime() }, t.isAfter = function (t) { return 1 === this.compareTo(t || new Date) }, t.isBefore = function (t) { return -1 === this.compareTo(t || new Date) }, t.isToday = t.isSameDay = function (t) { return this.clone().clearTime().equals((t || new Date).clone().clearTime()) }, t.addMilliseconds = function (t) { return t && this.setTime(this.getTime() + +t), this }, t.addSeconds = function (t) { return t ? this.addMilliseconds(1e3 * t) : this }, t.addMinutes = function (t) { return t ? this.addMilliseconds(6e4 * t) : this }, t.addHours = function (t) { return t ? this.addMilliseconds(36e5 * t) : this }, t.addDays = function (t) { return t && this.setDate(this.getDate() + +t), this }, t.addWeekdays = function (t) { if (!t) return this; var e = this.getDay(), n = Math.ceil(Math.abs(t) / 7); if (0 !== e && 6 !== e || 0 < t && (this.next().monday(), this.addDays(-1), e = this.getDay()), t < 0) { for (; t < 0;) this.addDays(-1), 0 !== (e = this.getDay()) && 6 !== e && t++; return this } return (5 < t || 6 - e <= t) && (t += 2 * n), this.addDays(t) }, t.addWeeks = function (t) { return t ? this.addDays(7 * t) : this }, t.addMonths = function (t) { if (!t) return this; var e = this.getDate(); return this.setDate(1), this.setMonth(this.getMonth() + +t), this.setDate(Math.min(e, o.getDaysInMonth(this.getFullYear(), this.getMonth()))), this }, t.addQuarters = function (t) { return t ? this.addMonths(3 * t) : this }, t.addYears = function (t) { return t ? this.addMonths(12 * t) : this }, t.add = function (t) { if ("number" == typeof t) return this._orient = t, this; var e = t; return e.day && e.day - this.getDate() != 0 && this.setDate(e.day), e.milliseconds && this.addMilliseconds(e.milliseconds), e.seconds && this.addSeconds(e.seconds), e.minutes && this.addMinutes(e.minutes), e.hours && this.addHours(e.hours), e.weeks && this.addWeeks(e.weeks), e.months && this.addMonths(e.months), e.years && this.addYears(e.years), e.days && this.addDays(e.days), this }, t.getWeek = function (t) { var e = new Date(this.valueOf()), n = t ? (e.addMinutes(e.getTimezoneOffset()), e.clone()) : this, r = (n.getDay() + 6) % 7; e.setDate(e.getDate() - r + 3); var i = e.valueOf(); return e.setMonth(0, 1), 4 !== e.getDay() && e.setMonth(0, 1 + (4 - e.getDay() + 7) % 7), 1 + Math.ceil((i - e) / 6048e5) }, t.getISOWeek = function () { return i(this.getWeek(!0)) }, t.setWeek = function (t) { return t - this.getWeek() == 0 ? 1 !== this.getDay() ? this.moveToDayOfWeek(1, 1 < this.getDay() ? -1 : 1) : this : this.moveToDayOfWeek(1, 1 < this.getDay() ? -1 : 1).addWeeks(t - this.getWeek()) }, t.setQuarter = function (t) { var e = Math.abs(3 * (t - 1) + 1); return this.setMonth(e, 1) }, t.getQuarter = function () { return Date.getQuarter(this) }, t.getDaysLeftInQuarter = function () { return Date.getDaysLeftInQuarter(this) }, t.moveToNthOccurrence = function (t, e) { if ("Weekday" === t) { if (0 < e) this.moveToFirstDayOfMonth(), this.is().weekday() && --e; else { if (!(e < 0)) return this; this.moveToLastDayOfMonth(), this.is().weekday() && (e += 1) } return this.addWeekdays(e) } var n = 0; if (0 < e) n = e - 1; else if (-1 === e) return this.moveToLastDayOfMonth(), this.getDay() !== t && this.moveToDayOfWeek(t, -1), this; return this.moveToFirstDayOfMonth().addDays(-1).moveToDayOfWeek(t, 1).addWeeks(n) }; function e(r, i, s) { return function (t, e) { var n = (t - this[r]() + s * (e || 1)) % s; return this[i](0 === n ? n += s * (e || 1) : n) } } t.moveToDayOfWeek = e("getDay", "addDays", 7), t.moveToMonth = e("getMonth", "addMonths", 12), t.getOrdinate = function () { var t = this.getDate(); return s(t) }, t.getOrdinalNumber = function () { return Math.ceil((this.clone().clearTime() - new Date(this.getFullYear(), 0, 1)) / 864e5) + 1 }, t.getTimezone = function () { return o.getTimezoneAbbreviation(this.getUTCOffset(), this.isDaylightSavingTime()) }, t.setTimezoneOffset = function (t) { var e = this.getTimezoneOffset(), n = -6 * Number(t) / 10; return n || 0 == n ? this.addMinutes(n - e) : this }, t.setTimezone = function (t) { return this.setTimezoneOffset(o.getTimezoneOffset(t)) }, t.hasDaylightSavingTime = function () { return Date.today().set({ month: 0, day: 1 }).getTimezoneOffset() !== Date.today().set({ month: 6, day: 1 }).getTimezoneOffset() }, t.isDaylightSavingTime = function () { return Date.today().set({ month: 0, day: 1 }).getTimezoneOffset() !== this.getTimezoneOffset() }, t.getUTCOffset = function (t) { var e, n = -10 * (t || this.getTimezoneOffset()) / 6; return n < 0 ? (e = (n - 1e4).toString()).charAt(0) + e.substr(2) : "+" + (e = (1e4 + n).toString()).substr(1) }, t.getElapsed = function (t) { return (t || new Date) - this }, t.set = function (t) { var e, n, r, i; for (e in t = function (s) { var t, e, n = {}, a = this, r = function (t, e, n) { if ("day" !== t) return o[e](n); var r = void 0 !== s.month ? s.month : a.getMonth(), i = void 0 !== s.year ? s.year : a.getFullYear(); return o[e](n, i, r) }; for (t in s) { hasOwnProperty.call(s, t) && (e = "validate" + t.charAt(0).toUpperCase() + t.slice(1), o[e] && null !== s[t] && r(t, e, s[t]) && (n[t] = s[t])) } return n }.call(this, t)) { hasOwnProperty.call(t, e) && (n = e.charAt(0).toUpperCase() + e.slice(1), "week" !== e && "month" !== e && "timezone" !== e && "timezoneOffset" !== e && (n += "s"), r = "add" + n, i = "get" + n, "month" === e ? r += "s" : "year" === e && (i = "getFullYear"), "day" !== e && "timezone" !== e && "timezoneOffset" !== e && "week" !== e && "hour" !== e ? this[r](t[e] - this[i]()) : "timezone" !== e && "timezoneOffset" !== e && "week" !== e && "hour" !== e || this["set" + n](t[e])) } return t.day && this.addDays(t.day - this.getDate()), this }, t.moveToFirstDayOfMonth = function () { return this.set({ day: 1 }) }, t.moveToLastDayOfMonth = function () { return this.set({ day: o.getDaysInMonth(this.getFullYear(), this.getMonth()) }) }; var s = function (t) { switch (+t) { case 1: case 21: case 31: return "st"; case 2: case 22: return "nd"; case 3: case 23: return "rd"; default: return "th" } }; t.toString = function (t, e) { if (!e && t && 1 === t.length && (output = function (t) { var e = Date.CultureInfo.formatPatterns; switch (t) { case "d": return this.toString(e.shortDate); case "D": return this.toString(e.longDate); case "F": return this.toString(e.fullDateTime); case "m": return this.toString(e.monthDay); case "r": case "R": return this.clone().addMinutes(this.getTimezoneOffset()).toString(e.rfc1123) + " GMT"; case "s": return this.toString(e.sortableDateTime); case "t": return this.toString(e.shortTime); case "T": return this.toString(e.longTime); case "u": return this.clone().addMinutes(this.getTimezoneOffset()).toString(e.universalSortableDateTime); case "y": return this.toString(e.yearMonth); default: return !1 } }.call(this, t), output)) return output; var n, r = (n = this, function (t) { if ("\\" === t.charAt(0)) return t.replace("\\", ""); switch (t) { case "hh": return i(n.getHours() < 13 ? 0 === n.getHours() ? 12 : n.getHours() : n.getHours() - 12); case "h": return n.getHours() < 13 ? 0 === n.getHours() ? 12 : n.getHours() : n.getHours() - 12; case "HH": return i(n.getHours()); case "H": return n.getHours(); case "mm": return i(n.getMinutes()); case "m": return n.getMinutes(); case "ss": return i(n.getSeconds()); case "s": return n.getSeconds(); case "yyyy": return i(n.getFullYear(), 4); case "yy": return i(n.getFullYear()); case "y": return n.getFullYear(); case "E": case "dddd": return Date.CultureInfo.dayNames[n.getDay()]; case "ddd": return Date.CultureInfo.abbreviatedDayNames[n.getDay()]; case "dd": return i(n.getDate()); case "d": return n.getDate(); case "MMMM": return Date.CultureInfo.monthNames[n.getMonth()]; case "MMM": return Date.CultureInfo.abbreviatedMonthNames[n.getMonth()]; case "MM": return i(n.getMonth() + 1); case "M": return n.getMonth() + 1; case "t": return n.getHours() < 12 ? Date.CultureInfo.amDesignator.substring(0, 1) : Date.CultureInfo.pmDesignator.substring(0, 1); case "tt": return n.getHours() < 12 ? Date.CultureInfo.amDesignator : Date.CultureInfo.pmDesignator; case "S": return s(n.getDate()); case "W": return n.getWeek(); case "WW": return n.getISOWeek(); case "Q": return "Q" + n.getQuarter(); case "q": return String(n.getQuarter()); case "z": return n.getTimezone(); case "Z": case "X": return Date.getTimezoneOffset(n.getTimezone()); case "ZZ": return -60 * n.getTimezoneOffset(); case "u": return n.getDay(); case "L": return o.isLeapYear(n.getFullYear()) ? 1 : 0; case "B": return "@" + (n.getUTCSeconds() + 60 * n.getUTCMinutes() + 3600 * (n.getUTCHours() + 1)) / 86.4; default: return t } }); return t ? t.replace(/((\\)?(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|S|q|Q|WW?W?W?)(?![^\[]*\]))/g, r).replace(/\[|\]/g, "") : this._toString() } }(), function () { var i = Date, s = i.prototype, t = Number.prototype; s._orient = 1, s._nth = null, s._is = !1, s._same = !1, s._isSecond = !1, t._dateElement = "days", s.next = function () { return this._move = !0, this._orient = 1, this }, i.next = function () { return i.today().next() }, s.last = s.prev = s.previous = function () { return this._move = !0, this._orient = -1, this }, i.last = i.prev = i.previous = function () { return i.today().last() }, s.is = function () { return this._is = !0, this }, s.same = function () { return this._same = !0, this._isSecond = !1, this }, s.today = function () { return this.same().day() }, s.weekday = function () { return this._nth ? c("Weekday").call(this) : this._move ? this.addWeekdays(this._orient) : !!this._is && (this._is = !1, !this.is().sat() && !this.is().sun()) }, s.weekend = function () { return !!this._is && (this._is = !1, this.is().sat() || this.is().sun()) }, s.at = function (t) { return "string" == typeof t ? i.parse(this.toString("d") + " " + t) : this.set(t) }, t.fromNow = t.after = function (t) { var e = {}; return e[this._dateElement] = this, (t ? t.clone() : new Date).add(e) }, t.ago = t.before = function (t) { var e = {}; return e["s" !== this._dateElement[this._dateElement.length - 1] ? this._dateElement + "s" : this._dateElement] = -1 * this, (t ? t.clone() : new Date).add(e) }; var e, n = "sunday monday tuesday wednesday thursday friday saturday".split(/\s/), r = "january february march april may june july august september october november december".split(/\s/), a = "Millisecond Second Minute Hour Day Week Month Year Quarter Weekday".split(/\s/), o = "Milliseconds Seconds Minutes Hours Date Week Month FullYear Quarter".split(/\s/), u = "final first second third fourth fifth".split(/\s/); s.toObject = function () { for (var t = {}, e = 0; e < a.length; e++) this["get" + o[e]] && (t[a[e].toLowerCase()] = this["get" + o[e]]()); return t }, i.fromObject = function (t) { return t.week = null, Date.today().set(t) }; function h(t, e, n) { for (var r = 0; r < t.length; r++) i[t[r].toUpperCase()] = i[t[r].toUpperCase().substring(0, 3)] = r, i[t[r]] = i[t[r].substring(0, 3)] = e(r), s[t[r]] = s[t[r].substring(0, 3)] = n(r) } var c = function (n) { return function () { if (this._is) return this._is = !1, this.getDay() === n; if (this._move && (this._move = null), null === this._nth) return this.moveToDayOfWeek(n, this._orient); this._isSecond && this.addSeconds(-1 * this._orient), this._isSecond = !1; var t = this._nth; this._nth = null; var e = this.clone().moveToLastDayOfMonth(); if (this.moveToNthOccurrence(n, t), e < this) throw new RangeError(i.getDayName(n) + " does not occur " + t + " times in the month of " + i.getMonthName(e.getMonth()) + " " + e.getFullYear() + "."); return this } }; h(n, function (n) { return function () { var t = i.today(), e = n - t.getDay(); return 0 === n && 1 === Date.CultureInfo.firstDayOfWeek && 0 !== t.getDay() && (e += 7), t.addDays(e) } }, c), h(r, function (t) { return function () { return i.today().set({ month: t, day: 1 }) } }, function (t) { return function () { return this._is ? (this._is = !1, this.getMonth() === t) : this.moveToMonth(t, this._orient) } }); function d(s) { return function () { if (this._isSecond) return this._isSecond = !1, this; if (this._same) { this._same = this._is = !1; for (var t = this.toObject(), e = (arguments[0] || new Date).toObject(), n = "", r = "s" === (r = s.toLowerCase())[r.length - 1] ? r.substring(0, r.length - 1) : r, i = a.length - 1; -1 < i; i--) { if (t[n = a[i].toLowerCase()] !== e[n]) return !1; if (r === n) break } return !0 } return "s" !== s.substring(s.length - 1) && (s += "s"), this._move && (this._move = null), this["add" + s](this._orient) } } for (var l = 0; l < a.length; l++) "weekday" !== (e = a[l].toLowerCase()) && (s[e] = s[e + "s"] = d(a[l]), t[e] = t[e + "s"] = function (t) { return function () { return this._dateElement = t, this } }(e + "s")); s._ss = d("Second"); function f(e) { return function (t) { return this._same ? this._ss(t) : t || 0 === t ? this.moveToNthOccurrence(t, e) : 2 === (this._nth = e) && null == t ? (this._isSecond = !0, this.addSeconds(this._orient)) : this } } for (var m = 0; m < u.length; m++) s[u[m]] = f(0 === m ? -1 : m) }(), function () { "use strict"; Date.Parsing = { Exception: function (t) { this.message = "Parse error at '" + t.substring(0, 10) + " ...'" } }; var s = Date.Parsing, r = { standard: [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334], leap: [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335] }; s.isLeapYear = function (t) { return t % 4 == 0 && t % 100 != 0 || t % 400 == 0 }; var i = { multiReplace: function (t, e) { var n, r; for (n in e) { Object.prototype.hasOwnProperty.call(e, n) && ("function" == typeof e[n] || (r = e[n] instanceof RegExp ? e[n] : new RegExp(e[n], "g")), t = t.replace(r, n)) } return t }, getDayOfYearFromWeek: function (t) { var e, n; return t.weekDay = t.weekDay || 0 === t.weekDay ? t.weekDay : 1, n = (0 === (e = new Date(t.year, 0, 4)).getDay() ? 7 : e.getDay()) + 3, t.dayOfYear = 7 * t.week + (0 === t.weekDay ? 7 : t.weekDay) - n, t }, getDayOfYear: function (t, e) { t.dayOfYear || (t = i.getDayOfYearFromWeek(t)); for (var n = 0; n <= e.length; n++) { if (t.dayOfYear < e[n] || n === e.length) { t.day = t.day ? t.day : t.dayOfYear - e[n - 1]; break } t.month = n } return t }, adjustForTimeZone: function (t, e) { var n; return "Z" === t.zone.toUpperCase() || 0 === t.zone_hours && 0 === t.zone_minutes ? n = -e.getTimezoneOffset() : (n = 60 * t.zone_hours + (t.zone_minutes || 0), "+" === t.zone_sign && (n *= -1), n -= e.getTimezoneOffset()), e.setMinutes(e.getMinutes() + n), e }, setDefaults: function (t) { return t.year = t.year || Date.today().getFullYear(), t.hours = t.hours || 0, t.minutes = t.minutes || 0, t.seconds = t.seconds || 0, t.milliseconds = t.milliseconds || 0, !t.month && (t.week || t.dayOfYear) || (t.month = t.month || 0, t.day = t.day || 1), t }, dataNum: function (t, e, n, r) { var i = +t; return e ? r ? t ? +e(t) : t : t ? e(i) : t : n ? t && void 0 !== t ? i : t : t ? i : t }, timeDataProcess: function (t) { var e = {}; for (var n in t.data) t.data.hasOwnProperty(n) && (e[n] = t.ignore[n] ? t.data[n] : i.dataNum(t.data[n], t.mods[n], t.explict[n], t.postProcess[n])); return t.data.secmins && (t.data.secmins = 60 * t.data.secmins.replace(",", "."), e.minutes ? e.seconds || (e.seconds = t.data.secmins) : e.minutes = t.data.secmins, delete t.secmins), e }, buildTimeObjectFromData: function (t) { return i.timeDataProcess({ data: { year: t[1], month: t[5], day: t[7], week: t[8], dayOfYear: t[10], hours: t[15], zone_hours: t[23], zone_minutes: t[24], zone: t[21], zone_sign: t[22], weekDay: t[9], minutes: t[16], seconds: t[19], milliseconds: t[20], secmins: t[18] }, mods: { month: function (t) { return t - 1 }, weekDay: function (t) { return 7 === (t = Math.abs(t)) ? 0 : t }, minutes: function (t) { return t.replace(":", "") }, seconds: function (t) { return Math.floor(+t.replace(":", "").replace(",", ".")) }, milliseconds: function (t) { return 1e3 * t.replace(",", ".") } }, postProcess: { minutes: !0, seconds: !0, milliseconds: !0 }, explict: { zone_hours: !0, zone_minutes: !0 }, ignore: { zone: !0, zone_sign: !0, secmins: !0 } }) }, addToHash: function (t, e, n) { for (var r = e.length, i = 0; i < r; i++) t[e[i]] = n[i]; return t }, combineRegex: function (t, e) { return new RegExp("((" + t.source + ")\\s(" + e.source + "))") }, getDateNthString: function (t, e, n) { return t ? Date.today().addDays(n).toString("d") : e ? Date.today().last()[n]().toString("d") : void 0 }, buildRegexData: function (t) { for (var e = [], n = t.length, r = 0; r < n; r++) "[object Array]" === Object.prototype.toString.call(t[r]) ? e.push(this.combineRegex(t[r][0], t[r][1])) : e.push(t[r]); return e } }; s.processTimeObject = function (t) { var e, n; return i.setDefaults(t), n = s.isLeapYear(t.year) ? r.leap : r.standard, t.month || !t.week && !t.dayOfYear ? t.dayOfYear = n[t.month] + t.day : i.getDayOfYear(t, n), e = new Date(t.year, t.month, t.day, t.hours, t.minutes, t.seconds, t.milliseconds), t.zone && i.adjustForTimeZone(t, e), e }, s.ISO = { regex: /^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-4])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?\s?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/, parse: function (t) { var e, n = t.match(this.regex); return n && n.length && (e = i.buildTimeObjectFromData(n)).year && (e.year || e.month || e.day || e.week || e.dayOfYear) ? s.processTimeObject(e) : null } }, s.Numeric = { isNumeric: function (t) { return !isNaN(parseFloat(t)) && isFinite(t) }, regex: /\b([0-1]?[0-9])([0-3]?[0-9])([0-2]?[0-9]?[0-9][0-9])\b/i, parse: function (t) { var e, n, r = {}, i = Date.CultureInfo.dateElementOrder.split(""); if (!this.isNumeric(t) || "+" === t[0] && "-" === t[0]) return null; if (t.length < 5 && t.indexOf(".") < 0 && t.indexOf("/") < 0) return r.year = t, s.processTimeObject(r); if (!(e = t.match(this.regex)) || !e.length) return null; for (n = 0; n < i.length; n++) switch (i[n]) { case "d": r.day = e[n + 1]; break; case "m": r.month = e[n + 1] - 1; break; case "y": r.year = e[n + 1] } return s.processTimeObject(r) } }, s.Normalizer = { regexData: function () { var t = Date.CultureInfo.regexPatterns; return i.buildRegexData([t.tomorrow, t.yesterday, [t.past, t.mon], [t.past, t.tue], [t.past, t.wed], [t.past, t.thu], [t.past, t.fri], [t.past, t.sat], [t.past, t.sun]]) }, basicReplaceHash: function () { var t = Date.CultureInfo.regexPatterns; return { January: t.jan.source, February: t.feb, March: t.mar, April: t.apr, May: t.may, June: t.jun, July: t.jul, August: t.aug, September: t.sep, October: t.oct, November: t.nov, December: t.dec, "": /\bat\b/gi, " ": /\s{2,}/, am: t.inTheMorning, "9am": t.thisMorning, pm: t.inTheEvening, "7pm": t.thisEvening } }, keys: function () { return [i.getDateNthString(!0, !1, 1), i.getDateNthString(!0, !1, -1), i.getDateNthString(!1, !0, "monday"), i.getDateNthString(!1, !0, "tuesday"), i.getDateNthString(!1, !0, "wednesday"), i.getDateNthString(!1, !0, "thursday"), i.getDateNthString(!1, !0, "friday"), i.getDateNthString(!1, !0, "saturday"), i.getDateNthString(!1, !0, "sunday")] }, buildRegexFunctions: function () { var t = Date.CultureInfo.regexPatterns, e = Date.i18n.__, n = new RegExp("(\\b\\d\\d?(" + e("AM") + "|" + e("PM") + ")? )(" + t.tomorrow.source.slice(1) + ")", "i"), r = new RegExp(t.today.source + "(?!\\s*([+-]))\\b"); this.replaceFuncs = [[r, function (t) { return 1 < t.length ? Date.today().toString("d") : t }], [n, function (t, e) { return Date.today().addDays(1).toString("d") + " " + e }], [t.amThisMorning, function (t, e) { return e }], [t.pmThisEvening, function (t, e) { return e }]] }, buildReplaceData: function () { this.buildRegexFunctions(), this.replaceHash = i.addToHash(this.basicReplaceHash(), this.keys(), this.regexData()) }, stringReplaceFuncs: function (t) { for (var e = 0; e < this.replaceFuncs.length; e++) t = t.replace(this.replaceFuncs[e][0], this.replaceFuncs[e][1]); return t }, parse: function (t) { t = this.stringReplaceFuncs(t), t = i.multiReplace(t, this.replaceHash); try { var e = t.split(/([\s\-\.\,\/\x27]+)/); 3 === e.length && s.Numeric.isNumeric(e[0]) && s.Numeric.isNumeric(e[2]) && 4 <= e[2].length && "d" === Date.CultureInfo.dateElementOrder[0] && (t = "1/" + e[0] + "/" + e[2]) } catch (t) { } return t } }, s.Normalizer.buildReplaceData() }(), function () { for (var f = Date.Parsing, m = f.Operators = { rtoken: function (n) { return function (t) { var e = t.match(n); if (e) return [e[0], t.substring(e[0].length)]; throw new f.Exception(t) } }, token: function () { return function (t) { return m.rtoken(new RegExp("^\\s*" + t + "\\s*"))(t) } }, stoken: function (t) { return m.rtoken(new RegExp("^" + t)) }, until: function (t) { return function (e) { for (var n = [], r = null; e.length;) { try { r = t.call(this, e) } catch (t) { n.push(r[0]), e = r[1]; continue } break } return [n, e] } }, many: function (r) { return function (e) { for (var n = [], t = null; e.length;) { try { t = r.call(this, e) } catch (t) { return [n, e] } n.push(t[0]), e = t[1] } return [n, e] } }, optional: function (n) { return function (e) { var t = null; try { t = n.call(this, e) } catch (t) { return [null, e] } return [t[0], t[1]] } }, not: function (t) { return function (e) { try { t.call(this, e) } catch (t) { return [null, e] } throw new f.Exception(e) } }, ignore: function (e) { return e ? function (t) { return [null, e.call(this, t)[1]] } : null }, product: function () { for (var t = arguments[0], e = Array.prototype.slice.call(arguments, 1), n = [], r = 0; r < t.length; r++) n.push(m.each(t[r], e)); return n }, cache: function (t) { var n = {}, r = 0, i = [], s = Date.Config.CACHE_MAX || 1e5, a = null; return function (e) { !function () { if (r === s) for (var t = 0; t < 10; t++) { var e = i.shift(); e && (delete n[e], r--) } }(); try { a = n[e] = n[e] || t.call(this, e) } catch (t) { a = n[e] = t } if (r++, i.push(e), a instanceof f.Exception) throw a; return a } }, any: function () { var r = arguments; return function (t) { for (var e = null, n = 0; n < r.length; n++) if (null != r[n]) { try { e = r[n].call(this, t) } catch (t) { e = null } if (e) return e } throw new f.Exception(t) } }, each: function () { var i = arguments; return function (e) { for (var t = [], n = null, r = 0; r < i.length; r++) if (null != i[r]) { try { n = i[r].call(this, e) } catch (t) { throw new f.Exception(e) } t.push(n[0]), e = n[1] } return [t, e] } }, all: function () { var t = arguments, e = e; return e.each(e.optional(t)) }, sequence: function (s, a, o) { return a = a || m.rtoken(/^\s*/), o = o || null, 1 === s.length ? s[0] : function (t) { for (var e = null, n = null, r = [], i = 0; i < s.length; i++) { try { e = s[i].call(this, t) } catch (t) { break } r.push(e[0]); try { n = a.call(this, e[1]) } catch (t) { n = null; break } t = n[1] } if (!e) throw new f.Exception(t); if (n) throw new f.Exception(n[1]); if (o) try { e = o.call(this, e[1]) } catch (t) { throw new f.Exception(e[1]) } return [r, e ? e[1] : t] } }, between: function (t, e, n) { n = n || t; var i = m.each(m.ignore(t), e, m.ignore(n)); return function (t) { var e = i.call(this, t); return [[e[0][0], r[0][2]], e[1]] } }, list: function (t, e, n) { return e = e || m.rtoken(/^\s*/), n = n || null, t instanceof Array ? m.each(m.product(t.slice(0, -1), m.ignore(e)), t.slice(-1), m.ignore(n)) : m.each(m.many(m.each(t, m.ignore(e))), px, m.ignore(n)) }, set: function (c, d, l) { return d = d || m.rtoken(/^\s*/), l = l || null, function (t) { for (var e = null, n = null, r = null, i = null, s = [[], t], a = !1, o = 0; o < c.length; o++) { e = n = r = null, a = 1 === c.length; try { e = c[o].call(this, t) } catch (t) { continue } if (i = [[e[0]], e[1]], 0 < e[1].length && !a) try { r = d.call(this, e[1]) } catch (t) { a = !0 } else a = !0; if (a || 0 !== r[1].length || (a = !0), !a) { for (var u = [], h = 0; h < c.length; h++) o !== h && u.push(c[h]); 0 < (n = m.set(u, d).call(this, r[1]))[0].length && (i[0] = i[0].concat(n[0]), i[1] = n[1]) } if (i[1].length < s[1].length && (s = i), 0 === s[1].length) break } if (0 === s[0].length) return s; if (l) { try { r = l.call(this, s[1]) } catch (t) { throw new f.Exception(s[1]) } s[1] = r[1] } return s } }, forward: function (e, n) { return function (t) { return e[n].call(this, t) } }, replace: function (n, r) { return function (t) { var e = n.call(this, t); return [r, e[1]] } }, process: function (n, r) { return function (t) { var e = n.call(this, t); return [r.call(this, e[0]), e[1]] } }, min: function (n, r) { return function (t) { var e = r.call(this, t); if (e[0].length < n) throw new f.Exception(t); return e } } }, t = "optional not ignore cache".split(/\s/), e = 0; e < t.length; e++) m[t[e]] = function (r) { return function () { var t, e = null, n = []; return 1 < arguments.length ? e = Array.prototype.slice.call(arguments) : arguments[0] instanceof Array && (e = arguments[0]), e ? 0 < (t = e.shift()).length ? (e.unshift(t[void 0]), n.push(r.apply(null, e)), e.shift(), n) : void 0 : r.apply(null, arguments) } }(m[t[e]]); for (var n = "each any all".split(/\s/), i = 0; i < n.length; i++) m[n[i]] = function (t) { return function () { return arguments[0] instanceof Array ? t.apply(null, arguments[0]) : t.apply(null, arguments) } }(m[n[i]]) }(), function () { function o() { if (this.meridian && (this.hour || 0 === this.hour)) { if ("a" === this.meridian && 11 < this.hour && Date.Config.strict24hr) throw "Invalid hour and meridian combination"; if ("p" === this.meridian && this.hour < 12 && Date.Config.strict24hr) throw "Invalid hour and meridian combination"; "p" === this.meridian && this.hour < 12 ? this.hour = this.hour + 12 : "a" === this.meridian && 12 === this.hour && (this.hour = 0) } } var u = Date, h = function (t) { for (var e = [], n = 0; n < t.length; n++) t[n] instanceof Array ? e = e.concat(h(t[n])) : t[n] && e.push(t[n]); return e }, c = { getToday: function () { return this.now || -1 !== "hour minute second".indexOf(this.unit) ? new Date : u.today() }, setDaysFromWeekday: function (t, e) { var n; return e = e || 1, this.unit = "day", n = u.getDayNumberFromName(this.weekday) - t.getDay(), this.days = n ? (n + 7 * e) % 7 : 7 * e, this }, setMonthsFromMonth: function (t, e) { var n; return e = e || 1, this.unit = "month", n = this.month - t.getMonth(), this.months = n ? (n + 12 * e) % 12 : 12 * e, this.month = null, this }, setDMYFromWeekday: function () { var t = Date[this.weekday](); return this.day = t.getDate(), this.month || (this.month = t.getMonth()), this.year = t.getFullYear(), this }, setUnitValue: function (t) { !this.value && this.operator && null !== this.operator && this[this.unit + "s"] && null !== this[this.unit + "s"] ? this[this.unit + "s"] = this[this.unit + "s"] + ("add" === this.operator ? 1 : -1) + (this.value || 0) * t : null != this[this.unit + "s"] && null == this.operator || (this.value || (this.value = 1), this[this.unit + "s"] = this.value * t) }, generateDateFromWeeks: function () { var t = void 0 !== this.weekday ? this.weekday : "today", e = Date[t]().addWeeks(this.weeks); return this.now && e.setTimeToNow(), e } }; u.Translator = { hour: function (t) { return function () { this.hour = Number(t) } }, minute: function (t) { return function () { this.minute = Number(t) } }, second: function (t) { return function () { this.second = Number(t) } }, secondAndMillisecond: function (e) { return function () { var t = e.match(/^([0-5][0-9])\.([0-9]{1,3})/); this.second = Number(t[1]), this.millisecond = Number(t[2]) } }, meridian: function (t) { return function () { this.meridian = t.slice(0, 1).toLowerCase() } }, timezone: function (e) { return function () { var t = e.replace(/[^\d\+\-]/g, ""); t.length ? this.timezoneOffset = Number(t) : this.timezone = e.toLowerCase() } }, day: function (t) { var e = t[0]; return function () { if (this.day = Number(e.match(/\d+/)[0]), this.day < 1) throw "invalid day" } }, month: function (t) { return function () { if (this.month = 3 === t.length ? "jan feb mar apr may jun jul aug sep oct nov dec".indexOf(t) / 4 : Number(t) - 1, this.month < 0) throw "invalid month" } }, year: function (e) { return function () { var t = Number(e); this.year = 2 < e.length ? t : t + (t + 2e3 < Date.CultureInfo.twoDigitYearMax ? 2e3 : 1900) } }, rday: function (t) { return function () { switch (t) { case "yesterday": this.days = -1; break; case "tomorrow": this.days = 1; break; case "today": this.days = 0; break; case "now": this.days = 0, this.now = !0 } } }, finishExact: function (t) { var e; t = t instanceof Array ? t : [t]; for (var n = 0; n < t.length; n++) t[n] && t[n].call(this); if (function () { var t = new Date; !this.hour && !this.minute || this.month || this.year || this.day || (this.day = t.getDate()), this.year || (this.year = t.getFullYear()), this.month || 0 === this.month || (this.month = t.getMonth()), this.day || (this.day = 1), this.hour || (this.hour = 0), this.minute || (this.minute = 0), this.second || (this.second = 0), this.millisecond || (this.millisecond = 0) }.call(this), o.call(this), this.day > u.getDaysInMonth(this.year, this.month)) throw new RangeError(this.day + " is not a valid value for days."); return e = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond), this.year < 100 && e.setFullYear(this.year), this.timezone ? e.set({ timezone: this.timezone }) : this.timezoneOffset && e.set({ timezoneOffset: this.timezoneOffset }), e }, finish: function (t) { var e, n, r, i; if (0 === (t = t instanceof Array ? h(t) : [t]).length) return null; for (var s, a = 0; a < t.length; a++) "function" == typeof t[a] && t[a].call(this); return !this.now || this.unit || this.operator ? (e = c.getToday.call(this), n = !!(this.days && null !== this.days || this.orient || this.operator), r = "past" === this.orient || "subtract" === this.operator ? -1 : 1, this.month && "week" === this.unit && (this.value = this.month + 1, delete this.month, delete this.day), !this.month && 0 !== this.month || -1 === "year day hour minute second".indexOf(this.unit) || (this.value || (this.value = this.month + 1), n = !(this.month = null)), n || !this.weekday || this.day || this.days || c.setDMYFromWeekday.call(this), n && this.weekday && "month" !== this.unit && "week" !== this.unit && c.setDaysFromWeekday.call(this, e, r), !this.weekday || "week" === this.unit || this.day || this.days || (i = Date[this.weekday](), this.day = i.getDate(), i.getMonth() !== e.getMonth() && (this.month = i.getMonth())), this.month && "day" === this.unit && this.operator && (this.value || (this.value = this.month + 1), this.month = null), null != this.value && null != this.month && null != this.year && (this.day = +this.value), this.month && !this.day && this.value && (e.set({ day: +this.value }), n || (this.day = +this.value)), this.month || !this.value || "month" !== this.unit || this.now || (this.month = this.value, n = !0), n && (this.month || 0 === this.month) && "year" !== this.unit && c.setMonthsFromMonth.call(this, e, r), this.unit || (this.unit = "day"), c.setUnitValue.call(this, r), o.call(this), !this.month && 0 !== this.month || this.day || (this.day = 1), this.orient || this.operator || "week" !== this.unit || !this.value || this.day || this.month ? "week" !== this.unit || !this.weeks || this.day || this.month ? (n && this.timezone && this.day && this.days && (this.day = this.days), n ? e.add(this) : e.set(this), this.timezone && (this.timezone = this.timezone.toUpperCase(), s = u.getTimezoneOffset(this.timezone), e.hasDaylightSavingTime() && u.getTimezoneAbbreviation(s, e.isDaylightSavingTime()) !== this.timezone && (e.isDaylightSavingTime() ? e.addHours(-1) : e.addHours(1)), e.setTimezoneOffset(s)), e) : c.generateDateFromWeeks.call(this) : Date.today().setWeek(this.value)) : new Date } } }(), function () { var e = Date; e.Grammar = {}; var a = e.Parsing.Operators, o = e.Grammar, u = e.Translator, h = function () { return a.each(a.any.apply(null, arguments), a.not(o.ctoken2("timeContext"))) }; o.datePartDelimiter = a.rtoken(/^([\s\-\.\,\/\x27]+)/), o.timePartDelimiter = a.stoken(":"), o.whiteSpace = a.rtoken(/^\s*/), o.generalDelimiter = a.rtoken(/^(([\s\,]|at|@|on)+)/); var c = {}; o.ctoken = function (t) { var e = c[t]; if (!e) { for (var n = Date.CultureInfo.regexPatterns, r = t.split(/\s+/), i = [], s = 0; s < r.length; s++) i.push(a.replace(a.rtoken(n[r[s]]), r[s])); e = c[t] = a.any.apply(null, i) } return e }, o.ctoken2 = function (t) { return a.rtoken(Date.CultureInfo.regexPatterns[t]) }; function d(t, e, n, r) { o[t] = r ? a.cache(a.process(a.each(a.rtoken(e), a.optional(o.ctoken2(r))), n)) : a.cache(a.process(a.rtoken(e), n)) } function i(t, e) { return a.cache(a.process(o.ctoken2(t), e)) } function r(t) { return n[t] = n[t] || o.format(t)[0], n[t] } var n = {}; o.allformats = function (t) { var e = []; if (t instanceof Array) for (var n = 0; n < t.length; n++) e.push(r(t[n])); else e.push(r(t)); return e }, o.formats = function (t) { if (t instanceof Array) { for (var e = [], n = 0; n < t.length; n++) e.push(r(t[n])); return a.any.apply(null, e) } return r(t) }; var t = function () { for (var t = ["h", "hh", "H", "HH", "m", "mm", "s", "ss", "ss.s", "z", "zz"], e = [/^(0[0-9]|1[0-2]|[1-9])/, /^(0[0-9]|1[0-2])/, /^([0-1][0-9]|2[0-3]|[0-9])/, /^([0-1][0-9]|2[0-3])/, /^([0-5][0-9]|[0-9])/, /^[0-5][0-9]/, /^([0-5][0-9]|[0-9])/, /^[0-5][0-9]/, /^[0-5][0-9]\.[0-9]{1,3}/, /^((\+|\-)\s*\d\d\d\d)|((\+|\-)\d\d\:?\d\d)/, /^((\+|\-)\s*\d\d\d\d)|((\+|\-)\d\d\:?\d\d)/], n = [u.hour, u.hour, u.hour, u.minute, u.minute, u.second, u.second, u.secondAndMillisecond, u.timezone, u.timezone, u.timezone], r = 0; r < t.length; r++) d(t[r], e[r], n[r]); o.hms = a.cache(a.sequence([o.H, o.m, o.s], o.timePartDelimiter)), o.t = i("shortMeridian", u.meridian), o.tt = i("longMeridian", u.meridian), o.zzz = i("timezone", u.timezone), o.timeSuffix = a.each(a.ignore(o.whiteSpace), a.set([o.tt, o.zzz])), o.time = a.each(a.optional(a.ignore(a.stoken("T"))), o.hms, o.timeSuffix) }, s = function () { function t() { return a.set(arguments, o.datePartDelimiter) } for (var e = ["d", "dd", "M", "MM", "y", "yy", "yyy", "yyyy"], n = [/^([0-2]\d|3[0-1]|\d)/, /^([0-2]\d|3[0-1])/, /^(1[0-2]|0\d|\d)/, /^(1[0-2]|0\d)/, /^(\d+)/, /^(\d\d)/, /^(\d\d?\d?\d?)/, /^(\d\d\d\d)/], r = [u.day, u.day, u.month, u.month, u.year, u.year, u.year, u.year], i = ["ordinalSuffix", "ordinalSuffix"], s = 0; s < e.length; s++) d(e[s], n[s], r[s], i[s]); o.MMM = o.MMMM = a.cache(a.process(o.ctoken("jan feb mar apr may jun jul aug sep oct nov dec"), u.month)), o.ddd = o.dddd = a.cache(a.process(o.ctoken("sun mon tue wed thu fri sat"), function (t) { return function () { this.weekday = t } })), o.day = h(o.d, o.dd), o.month = h(o.M, o.MMM), o.year = h(o.yyyy, o.yy), o.mdy = t(o.ddd, o.month, o.day, o.year), o.ymd = t(o.ddd, o.year, o.month, o.day), o.dmy = t(o.ddd, o.day, o.month, o.year), o.date = function (t) { return (o[Date.CultureInfo.dateElementOrder] || o.mdy).call(this, t) } }, l = function () { o.orientation = a.process(o.ctoken("past future"), function (t) { return function () { this.orient = t } }), o.operator = a.process(o.ctoken("add subtract"), function (t) { return function () { this.operator = t } }), o.rday = a.process(o.ctoken("yesterday tomorrow today now"), u.rday), o.unit = a.process(o.ctoken("second minute hour day week month year"), function (t) { return function () { this.unit = t } }) }; o.buildGrammarFormats = function () { c = {}, t(), s(), l(), o.value = a.process(a.rtoken(/^([-+]?\d+)?(st|nd|rd|th)?/), function (t) { return function () { this.value = t.replace(/\D/g, "") } }), o.expression = a.set([o.rday, o.operator, o.value, o.unit, o.orientation, o.ddd, o.MMM]), o.format = a.process(a.many(a.any(a.process(a.rtoken(/^(dd?d?d?(?!e)|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|zz?z?)/), function (t) { if (o[t]) return o[t]; throw e.Parsing.Exception(t) }), a.process(a.rtoken(/^[^dMyhHmstz]+/), function (t) { return a.ignore(a.stoken(t)) }))), function (t) { return a.process(a.each.apply(null, t), u.finishExact) }), o._start = a.process(a.set([o.date, o.time, o.expression], o.generalDelimiter, o.whiteSpace), u.finish) }, o.buildGrammarFormats(), o._formats = o.formats(['"yyyy-MM-ddTHH:mm:ssZ"', "yyyy-MM-ddTHH:mm:ss.sz", "yyyy-MM-ddTHH:mm:ssZ", "yyyy-MM-ddTHH:mm:ssz", "yyyy-MM-ddTHH:mm:ss", "yyyy-MM-ddTHH:mmZ", "yyyy-MM-ddTHH:mmz", "yyyy-MM-ddTHH:mm", "ddd, MMM dd, yyyy H:mm:ss tt", "ddd MMM d yyyy HH:mm:ss zzz", "MMddyyyy", "ddMMyyyy", "Mddyyyy", "ddMyyyy", "Mdyyyy", "dMyyyy", "yyyy", "Mdyy", "dMyy", "d"]), o.start = function (t) { try { var e = o._formats.call({}, t); if (0 === e[1].length) return e } catch (t) { } return o._start.call({}, t) } }(), function () { var n = Date, r = function (t) { return ords = t.match(/\b(\d+)(?:st|nd|rd|th)\b/), t = ords && 2 === ords.length ? t.replace(ords[0], ords[1]) : t }, i = function (t) { var e = null; try { e = n.Grammar.start.call({}, t.replace(/^\s*(\S*(\s+\S+)*)\s*$/, "$1")) } catch (t) { return null } return 0 === e[1].length ? e[0] : null }, s = function (t) { var e; try { return (e = Date._parse(t)) || 0 === e ? new Date(e) : null } catch (t) { return null } }; n._parse || (n._parse = n.parse), n.parse = function (t) { var e; return t ? t instanceof Date ? t.clone() : (4 <= t.length && "0" !== t.charAt(0) && "+" !== t.charAt(0) && "-" !== t.charAt(0) && (e = n.Parsing.ISO.parse(t) || n.Parsing.Numeric.parse(t)), e instanceof Date && !isNaN(e.getTime()) ? e : (t = n.Parsing.Normalizer.parse(r(t)), null !== (e = i(t)) ? e : s(t))) : null }, Date.getParseFunction = function (t) { var r = Date.Grammar.allformats(t); return function (t) { for (var e = null, n = 0; n < r.length; n++) { try { e = r[n].call({}, t) } catch (t) { continue } if (0 === e[1].length) return e[0] } return null } }, n.parseExact = function (t, e) { return n.getParseFunction(e)(t) } }(), function () { function o(t, e) { return ("000" + t).slice(-1 * (e = e || 2)) } var u = Date, e = u.prototype, n = { d: "dd", "%d": "dd", D: "ddd", "%a": "ddd", j: "dddd", l: "dddd", "%A": "dddd", S: "S", F: "MMMM", "%B": "MMMM", m: "MM", "%m": "MM", M: "MMM", "%b": "MMM", "%h": "MMM", n: "M", Y: "yyyy", "%Y": "yyyy", y: "yy", "%y": "yy", g: "h", "%I": "h", G: "H", h: "hh", H: "HH", "%H": "HH", i: "mm", "%M": "mm", s: "ss", "%S": "ss", "%r": "hh:mm tt", "%R": "H:mm", "%T": "H:mm:ss", "%X": "t", "%x": "d", "%e": "d", "%D": "MM/dd/yy", "%n": "\\n", "%t": "\\t", e: "z", T: "z", "%z": "z", "%Z": "z", Z: "ZZ", N: "u", w: "u", "%w": "u", W: "W", "%V": "W" }, i = { substitutes: function (t) { return n[t] }, interpreted: function (e, n) { var r; switch (e) { case "%u": return n.getDay() + 1; case "z": return n.getOrdinalNumber(); case "%j": return o(n.getOrdinalNumber(), 3); case "%U": var i = n.clone().set({ month: 0, day: 1 }).addDays(-1).moveToDayOfWeek(0), s = n.clone().addDays(1).moveToDayOfWeek(0, -1); return s < i ? "00" : o((s.getOrdinalNumber() - i.getOrdinalNumber()) / 7 + 1); case "%W": return o(n.getWeek()); case "t": return u.getDaysInMonth(n.getFullYear(), n.getMonth()); case "o": case "%G": return n.setWeek(n.getISOWeek()).toString("yyyy"); case "%g": return n._format("%G").slice(-2); case "a": case "%p": return t("tt").toLowerCase(); case "A": return t("tt").toUpperCase(); case "u": return o(n.getMilliseconds(), 3); case "I": return n.isDaylightSavingTime() ? 1 : 0; case "O": return n.getUTCOffset(); case "P": return (r = n.getUTCOffset()).substring(0, r.length - 2) + ":" + r.substring(r.length - 2); case "B": var a = new Date; return Math.floor((3600 * a.getHours() + 60 * a.getMinutes() + a.getSeconds() + 60 * (a.getTimezoneOffset() + 60)) / 86.4); case "c": return n.toISOString().replace(/\"/g, ""); case "U": return u.strtotime("now"); case "%c": return t("d") + " " + t("t"); case "%C": return Math.floor(n.getFullYear() / 100 + 1) } }, shouldOverrideDefaults: function (t) { switch (t) { case "%e": return !0; default: return !1 } }, parse: function (t, e) { var n = e || new Date, r = i.substitutes(t); return r || ((r = i.interpreted(t, n)) || t) } }; u.normalizeFormat = function (t, e) { return t.replace(/(%|\\)?.|%%/g, function (t) { return i.parse(t, e) }) }, u.strftime = function (t, e) { return Date.parse(e)._format(t) }, u.strtotime = function (t) { var e = u.parse(t); return Math.round(u.UTC(e.getUTCFullYear(), e.getUTCMonth(), e.getUTCDate(), e.getUTCHours(), e.getUTCMinutes(), e.getUTCSeconds(), e.getUTCMilliseconds()) / 1e3) }; e._format = function (t) { var r, e = (r = this, function (t) { var e, n; return "\\" === t.charAt(0) || "%%" === t.substring(0, 2) ? t.replace("\\", "").replace("%%", "%") : (n = i.shouldOverrideDefaults(t), (e = u.normalizeFormat(t, r)) ? r.toString(e, n) : void 0) }); return t ? t.replace(/(%|\\)?.|%%/g, e) : this._toString() }, e.format || (e.format = e._format) }(), function () { "use strict"; var o = function (t, e, n, r, i) { var s, a; return 1 === arguments.length && "number" == typeof t ? (s = t < 0 ? -1 : 1, a = Math.abs(t), this.setDays(Math.floor(a / 864e5) * s), a %= 864e5, this.setHours(Math.floor(a / 36e5) * s), a %= 36e5, this.setMinutes(Math.floor(a / 6e4) * s), a %= 6e4, this.setSeconds(Math.floor(a / 1e3) * s), a %= 1e3, this.setMilliseconds(a * s)) : this.set(t, e, n, r, i), this.getTotalMilliseconds = function () { return 864e5 * this.getDays() + 36e5 * this.getHours() + 6e4 * this.getMinutes() + 1e3 * this.getSeconds() }, this.compareTo = function (t) { var e = new Date(1970, 1, 1, this.getHours(), this.getMinutes(), this.getSeconds()), n = null === t ? new Date(1970, 1, 1, 0, 0, 0) : new Date(1970, 1, 1, t.getHours(), t.getMinutes(), t.getSeconds()); return e < n ? -1 : n < e ? 1 : 0 }, this.equals = function (t) { return 0 === this.compareTo(t) }, this.add = function (t) { return null === t ? this : this.addSeconds(t.getTotalMilliseconds() / 1e3) }, this.subtract = function (t) { return null === t ? this : this.addSeconds(-t.getTotalMilliseconds() / 1e3) }, this.addDays = function (t) { return new o(this.getTotalMilliseconds() + 864e5 * t) }, this.addHours = function (t) { return new o(this.getTotalMilliseconds() + 36e5 * t) }, this.addMinutes = function (t) { return new o(this.getTotalMilliseconds() + 6e4 * t) }, this.addSeconds = function (t) { return new o(this.getTotalMilliseconds() + 1e3 * t) }, this.addMilliseconds = function (t) { return new o(this.getTotalMilliseconds() + t) }, this.get12HourHour = function () { return 12 < this.getHours() ? this.getHours() - 12 : 0 === this.getHours() ? 12 : this.getHours() }, this.getDesignator = function () { return this.getHours() < 12 ? Date.CultureInfo.amDesignator : Date.CultureInfo.pmDesignator }, this.toString = function (t) { this._toString = function () { return null !== this.getDays() && 0 < this.getDays() ? this.getDays() + "." + this.getHours() + ":" + this.p(this.getMinutes()) + ":" + this.p(this.getSeconds()) : this.getHours() + ":" + this.p(this.getMinutes()) + ":" + this.p(this.getSeconds()) }, this.p = function (t) { return t.toString().length < 2 ? "0" + t : t }; var e = this; return t ? t.replace(/dd?|HH?|hh?|mm?|ss?|tt?/g, function (t) { switch (t) { case "d": return e.getDays(); case "dd": return e.p(e.getDays()); case "H": return e.getHours(); case "HH": return e.p(e.getHours()); case "h": return e.get12HourHour(); case "hh": return e.p(e.get12HourHour()); case "m": return e.getMinutes(); case "mm": return e.p(e.getMinutes()); case "s": return e.getSeconds(); case "ss": return e.p(e.getSeconds()); case "t": return (e.getHours() < 12 ? Date.CultureInfo.amDesignator : Date.CultureInfo.pmDesignator).substring(0, 1); case "tt": return e.getHours() < 12 ? Date.CultureInfo.amDesignator : Date.CultureInfo.pmDesignator } }) : this._toString() }, this }; !function (t, e) { for (var n = 0; n < e.length; n++) { var r = e[n], i = r.slice(0, 1).toUpperCase() + r.slice(1); t.prototype[r] = 0, t.prototype["get" + i] = function (t) { return function () { return this[t] } }(r), t.prototype["set" + i] = function (e) { return function (t) { return this[e] = t, this } }(r) } }(o, ["years", "months", "days", "hours", "minutes", "seconds", "milliseconds"].slice(2)), o.prototype.set = function (t, e, n, r, i) { this.setDays(t || this.getDays()), this.setHours(e || this.getHours()), this.setMinutes(n || this.getMinutes()), this.setSeconds(r || this.getSeconds()), this.setMilliseconds(i || this.getMilliseconds()) }, Date.prototype.getTimeOfDay = function () { return new o(0, this.getHours(), this.getMinutes(), this.getSeconds(), this.getMilliseconds()) }, Date.TimeSpan = o, "undefined" != typeof window && (window.TimeSpan = o) }(), function () { "use strict"; function t(t, e, n, r, i, s, a) { var o, u, h, c, d, l, f, m, y; return 7 === arguments.length ? this.set(t, e, n, r, i, s, a) : 2 === arguments.length && t instanceof Date && e instanceof Date && (o = t.clone(), h = (u = e.clone()) < o ? 1 : -1, this.dates = { start: t.clone(), end: e.clone() }, function (t, e, n, r) { function i() { e.addMonths(-t), r.months++, 12 === r.months && (r.years++, r.months = 0) } if (1 === t) for (; n < e;) i(); else for (; e < n;) i(); r.months--, r.months *= t, r.years *= t }(h, o, u, this), l = h, m = u, (y = !1 == ((f = o).isDaylightSavingTime() === m.isDaylightSavingTime())) && 1 === l ? f.addHours(-1) : y && f.addHours(1), 0 != (c = u - o) && (d = new TimeSpan(c), this.set(this.years, this.months, d.getDays(), d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds()))), this } !function (t, e) { for (var n = 0; n < e.length; n++) { var r = e[n], i = r.slice(0, 1).toUpperCase() + r.slice(1); t.prototype[r] = 0, t.prototype["get" + i] = function (t) { return function () { return this[t] } }(r), t.prototype["set" + i] = function (e) { return function (t) { return this[e] = t, this } }(r) } }(t, ["years", "months", "days", "hours", "minutes", "seconds", "milliseconds"]), t.prototype.set = function (t, e, n, r, i, s, a) { this.setYears(t || this.getYears()), this.setMonths(e || this.getMonths()), this.setDays(n || this.getDays()), this.setHours(r || this.getHours()), this.setMinutes(i || this.getMinutes()), this.setSeconds(s || this.getSeconds()), this.setMilliseconds(a || this.getMilliseconds()) }, Date.TimePeriod = t, "undefined" != typeof window && (window.TimePeriod = t) }();